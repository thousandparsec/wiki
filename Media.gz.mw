media.gz is a file which the client can download from a media server to get details about what is available. It will always be found off the base url of the server.

The file is a gziped plain text file with the format as specified below,
<pre>
<filename> <last modtime> <size> <checksum type>:<checksum>
<filename> <last modtime> <size> <checksum type 1>:<checksum 1>,<checksum type 2>:<checksum 2>
</pre>

* The size is in bytes.
* The last modtime is in the format <year><month><day>T<hour><minute>, all should have leading zeros.
* Checksum type can be, md5 or sha1, other hash formats may be supported in the future.
* Checksum is a hexdump of the checksum for the file (IE How we normally view MD5 sums, 6afb6b9187f5aa5d4168ae71fb3f27b0).

The filename for every media file type on the server should be included. An example media.gz is included below,

<pre>
planets/planet1.gif 20070102T2053 253123 md5:6afb6b9187f5aa5d4168ae71fb3f27b0
planets/planet1.png 20070305T2116 42527 md5:d41d8cd98f00b204e9800998ecf8427e
planets/planet1.mng 20070305T1549 128345 md5:363336bbeb78f404e6926572caed7f49
</pre>

Thousand Servers will not give full URLs, instead it will give a URL leaving out the media extension. It is up to the client to choose the file type that is requires.

For example,
<pre>
Server's base url:  http://media.thousandparsec.net/media/
Object's media url: planets/planet1
</pre>

If the client supported mng, it could download the 
<pre>
http://media.thousandparsec.net/media/planets/planet1.mng
</pre>



<pre>
Format for media repositories are the following,

media-new.gz
directory1/mediafile.png
directory1/mediafile.mesh

All media which is the same but in a different format must have the same 
basename. See the above example where the file "mediafile" is avaliable in 
both png and mesh format.

The MEDIA is a compressed text file which describes all the media 
avaliable on the server and some metadata about it.
It has the following format
<media file> <last modtime YYYYMMddThhmm> <filesize bytes> <checksumtype>:<checksum>
directory1/mediafile.png 	20060614T0923 1789345 md5:318424ccbd97c644d6baa594284fefe3
directory1/mediafile.mesh 	20060614T0923 7623748 md5:1505b14a78c9e5858edd0f044c4e0062

URLs of media locations are escaped locally using the following system
re.sub('[^a-zA-Z0-9_]', '-', url)
This means that the url "http://media.thousandparsec.net:80/client"
would be escape as      "http---media.thousandparsec.net-80-client"
The URL should always be in full format including the port.

When media is downloaded locally (or distributed via packages) a meta file
is created for each file. This file allows the client to check if the
graphic is up to date. The meta file contains,
<last modtime YYYYMMddThhmm> <filesize bytes> <checksumtype>:<checksum>
20060614T0923 1789345 md5:318424ccbd97c644d6baa594284fefe3

Media can also be distributed via packages. This should be installed in
a shared location such as /usr/share/games/tp, a "media-new.gz" should be 
generated from the .meta files installed in the packages.

This allows spliting the media from a single URL (say 
http://media.thousandparsec.net) to be distributed into seperate packages,
say the 3d and 2d data.

In package A might have,
/usr/share/games/tp/http---media.thousandparsec.net-80-client/directory1/mediafile.png
/usr/share/games/tp/http---media.thousandparsec.net-80-client/directory1/mediafile.png.meta

In package B might have,
/usr/share/games/tp/http---media.thousandparsec.net-80-client/directory2/mediafile.png
/usr/share/games/tp/http---media.thousandparsec.net-80-client/directory2/mediafile.png.meta

The media.gz can then be generated with a script kind of like,

echo > media-new.gz
for $i in `find -name *.meta`; do
 echo `basename $i .meta` `cat $i` >> media-new.gz
done

When a new media is avaliable it will be downloaded to the local 
users home directory.

~/.tp/media/http---media.thousandparsec.net-80-client/media-new.gz
~/.tp/media/http---media.thousandparsec.net-80-client/directory1/mediafile.png
~/.tp/media/http---media.thousandparsec.net-80-client/directory1/mediafile.png.meta
~/.tp/media/ftp---someotherplace.net-21-pub/media-new.gz

If a media file is found in the distribution search locations that is the 
same or newer then the users version. The users version should be removed.
</pre>
