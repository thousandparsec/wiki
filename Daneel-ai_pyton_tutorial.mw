This tutorial will show you how to make a simple AI for MTSec using python and Daneel-ai.


== Step 0: requirements ==

TP stuff:

* [http://www.thousandparsec.net/tp/download-instructions.php?product=daneel-ai&platform=developer daneel-ai] from the repository
* [http://www.thousandparsec.net/tp/downloads.php?category=server tpserver-cpp]
* [http://www.thousandparsec.net/tp/downloads.php?category=client tpclient-pywx] recommended

Other stuff:

* text editor or IDE (I used [http://www.eclipse.org/ eclipse] with [http://pydev.org/ pydev plugin])
* python

== Step 1: ruleset files ==

First we will create some ruleset files.

* create a new file in the rules folder of daneel-ai for your ruleset (we will call it mtsec-simple in this tutorial)
* copy this into the newly created file
 [Modules]
 basic
 mod-mtsec-simple
 
 [Constraints]
 
 [Rules]
 
 [Functions]
 

* create a new file in the daneel folder of daneel-ai (we will name it mod-mtsec-simple.py in this tutorial)

== Step 2: generate code ==

Now we will generate all the code to get you started and put it in the file we created in the previous step.

* Start the tpserver-cpp with the desired ruleset (MTSec in this tutorial).

 tpserver-cpp -v -C quickstart-mtsec.conf

* Run daneel-ai with the ruleset set to codeGenerator

 daneel-ai.py -f codeGenerator -u dummy:dummy@localhost/tp

Output of daneel-ai between "LIST OF POSSIBLE ORDERS" and "END OF LIST OF POSSIBLE ORDERS" is a list of all possible orders for this ruleset with their descriptions and is there to help you understand orders.

* Now copy all the output of daneel-ai between "LIST OF POSSIBLE ORDERS CODE" and "END OF LIST OF POSSIBLE ORDERS CODE" into mod-mtsec-simple.py we created in the previous step.

== Step 3: write AI code ==

helper functions in helper

=== Step 3.1: adding a new design ===

listing designs
listing components

=== Step 3.2: resource information ===

=== Step 3.1: giving orders ===
