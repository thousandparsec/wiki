== Brief description ==

First, build a stand-along “battleship creator” (possibly with python-ogre). Then this battleship creator can be integrated in to the existing 2D and 3D client. After this, I plan to modify the server and client application, and extend the existing rule set (such as the TP RFTS ) to make it to support this battleship creator and allow the users to create their many different kinds of battleships. These created battleships don't only differ in the appearance, but also in their functionalities and attributes like damage, speed, armor and so on. It world make the game much more interesting and playable.


== More details about the Battleship Creator ==

A battleship is constructed by several basic parts, i.e. the base, the motive power engine, the weapon, the power generator and the defensive system. 

In the Battleship Creator, we provide several alternatives for each component (and the user can also import their own). The user then choose from the alternatives for each part to assembly their battleship.

Following picture is a draft of the possible layout of the Battleship Creator (sorry for my bad drawing skills ...)

[[images/Bc.jpg]]

Each alternatives doesn't differ only in their appearance, but also in their attributes (which can decide the attributes of the battleship, such as speed, HP, damage). In order to successfully build a battleship, some constraints must be satisfied. For example, each battleship will have a power consumption constraint, that is, the total power consumption of all the components in the battleship must less than the maximum power can be generated by the power generator in the same battleship.
Another constraints might be the mass constraint, i.e. the total mass of all components must less than that can be supported by the base.
For a better understanding, please look at the following sample class diagram for the components.



[[images/Class.jpg]]

== Extension of existing rule set ==

To extend the rule set, we need to expend the existing technology tree, i.e. add in required technologies for each component, so that certain component can only be available if the required technology is available.

To make the game more playable, we add some constraints for creating a new battleship to prevent that  the all the user just create the battleship using the components with the ultimate technology at the end. In a nutshell, each component has some advantages over others, and also some drawbacks. 

For example, in the sample class diagram above, we can see that the missile launcher can impose an higher damage than that of a machine gun, but it consumes more power; it also has more mass, which means a greater HP (proportional to the mass) but a slower speed(inversely proportional to the mass). In this way, we hope that the player can play with more stuffs in the game and found it more interesting.

== About me ==
I am a Computer Science student studying at National University of Singapore [http://www.nus.edu.sg]. I am now in my third year. I am good at Java and c++ programming languages. I also have strong basic programing skills which enable me to learn a new language very fast.

I am very interested in graphics such as 3D rendering.



----

== Comments ==

The battleship designer sounds a lot like the "Design" capability we already have but with a 3d model view, see the screenshot halfway down [http://greywhind.wordpress.com/2009/08/19/gsoc-2009-final-report/ Greywhind's final GSoC 09 report] for the current (tpclient-pywx) version. The components are describe on the server and sent to the client. Have a read of the [http://www.thousandparsec.net/tp/dev/documents/protocol3.php protocol documentation].

It's good to extend a ruleset, but we don't want to extend it past what it was originally design for [[TP RFTS]] is based on Reach for the Stars, and can't be modified too much. Others (such as [[MTSec]], etc) can be extended (or maybe forked).

Try focusing on something we are going to do, but haven't done yet.

--[[User:Lee Begg|Lee Begg]] 23:24, 22 March 2010 (UTC)