====Web Based Client====

===Summary===

Taking the Python Client as an example I am to reproduce most if not all the functionality of the Python client in a web based form, using the relevant API.

Primarily, in terms of server language, I am a PHP coder, so this will be coded in PHP using a relevant JavaScript platform to provide AJAX functionality.

===Proposal===

A few years ago I used to play the web based Game Ferion, which is similar in fashion to thousand parsec, given that it is a Space Based game, the aim being to conquer the opponents.

I aim to implement all four of the initial ideas listed, in such a way so to allow the Client to be used for any ruleset as defined by their controlling files.

It is anticipated that extensions to the libtpproto-php client library will need to be performed. Having had a fiddle with the php client library and thru reading relevant documentation I envisage most of the time going on the client/server communication part of the web client.

===Elements===

The PHP library will need extensive improvements and code in order to bring it up to usable standards, in line with the python library. This will take up the bulk of the time.

Server communication is the next step. Ensuring that any client can communicate with the server appropriately.

===Things To Consider===

Caching

User Authentication to the server,

The Star Map – This is primarily going to be described using XML and generated on the fly from a pool on image, there is also the possibility of animation, for turn cycles.

XML-RPC transfer seems the most appropriate method for Object data transfer, loaded asynchronously from the server, this is also easy to export for saving and other client use.

Issuing Orders should be relatively straight forward, keeping things logical will be the harder part.

Regardless of TimeLine, I will endeavour to be further involved with TP, both as a player and as the web client developer.

===TimeLine===


Summer of Code is about 13 weeks long

====Week 1 - 3====
Begin work on frame generator, converting 1 to \x00\x00\x00\x01 using PHP (I havn't figured this out yet) as per the existing frame work, and begin exchanging Communications with a TP server. In good order and so both the client and server understand each other, this will include basic authentication and account creation.

====Week 2 – 4====
Initial work on StarMap to Image, using server output, this will include decoding of server responses, for the PHP library to understand.

====Week 4 ====
Begin work on Data Caching, if determine to be needed, for common elements, common ship designs and elements of a ship design. And the CRON data updater

====Week 5====
Work begins on the front end, to allow users to login and get the starmap loaded up as well as server messages

====Week 7 – 8 ====
Work on Design management, user creation on the front end.
And preliminary order creation and management.

====Week 9====
CSS – Cascading Stylesheet, design, build, cross browser test.

====Week 10 – 11====
Begin switching things to AJAX protocol, if it doesn't work without the protocol, why start with the protocol?

====Week 12====
Prettification, scriptaculous effects and the like

====Week 13====
Make sure everything is where it should be, deploy to run on both demo servers


===Tools/Technologies===

PHP for main website coding, and client protocol.

xHTML 1.1 for the HTML

Jquery seems the likely JavaScript platform to be used, as this time I have  never used a JavaScript platform other than Scriptaculous, which is a JavaScript Effects Library

CSS for styling

XML-RPC, for object description, from a central data server.

===Mock Up===
to be done

===Myself===

GSoC is an interesting platform, however it can be difficult to find a project, that fits my skill set, I'm not a programming in the sense that one builds a programme to run continuously, such as the Thousand Parsec server, but more of a coder who builds websites. So the Web Based Client for Thousand Parsec instantly stood out as an interesting project.
I have also been friends with (IRC Name) Landon since Last Years GSoC and he said he was going with Thousand Parsec this year, so thought I would check out this years project list.
I was the recent winner of the Gary Frisch Bursary for Software in radio, for my Open Source Content Management System, which currently runs the LSRfm.com (Leeds Student Radio) website, (http://LSRfm.com/). This CMS (Carlyon CMS) I will use to form the basis of the web based Client.
I used to be able to program perl, but of late have not had the change to practice it so my perl is rusty, I am currently learning Ruby on Rails and Coldfusion as well.
My aim in life is to continue working in the MultiPlatform Radio Environment in the UK, which is pretty much what I do at the moment as a Volunteer at LSRfm.com where I am Head of Web Development.

Last year I was involved with the Now Aborted, One Bug Tracker to Rule them all Project over at PHP.