== Abstract ==

There were space games and there was Elite.

The goal of this assignment would be to create a ruleset for Thousand Parsec that would be in a similar spirit as the Elite series with inspirations from Traveller, Frontier, and other "me vs. the Galaxy" sources. Contrary to the typical TP ruleset, the player would not be in charge of vast fleets and owning many planets, but rather be based around a single ship, with the possibility of recruiting a small amount of helpers. To further make the proposal and game interesting, let's go the Elite way and generate content randomly, including, but not limited to planet positions, names and descriptions, trade routes, economical/political situations of planets, etc. The universe should feel alive without the players actions.

Each player starts just with his ship and a fistful of credits. From this point on he can pursue any career he'd like. Buying new ships, hiring escorts, and creating a trade empire by first buying offices at, and then whole space stations could allow him pursuing the trade path. Recruiting various scum, and traveling across known lanes would make him pursue the adventurous path of the pirate. But he should be wary that piracy is illegal, and sooner or later, a bounty would be placed on his head, either by fellow players, the police or the military. Another type of players could pursue the bounty hunter path, and try to catch those players with bounties.

Possibilities are endless, and the game can be brilliant, as long as we keep in mind the spirit of Elite/Traveller, and the fact that it should be a truly multiplayer game, allowing as much interaction between players as is possible in a turn-based environment.

== Deliverables ==

A ruleset module for TP implementing a interesting and balanced Space Exploration game. Also required extensions to the server, and proposals for enhancements to the protocol (if needed in the design). Along with the module I will deliver all it's datafiles, each one with solid and complete documentation for anyone wanting to do a modifications. I also plan to keep all the content generators (planet/ship names, planetary descriptions, system descriptions, events) in a separate universal module to allow re-usage of it by any TP-based game.

Additionally, one TP client will be chosen as the priority target for the ruleset. For it I plan to do all the neccessary improvements to handle the ruleset and also deliver a complete set of media needed to illustrate the game. Media will include textured, 3d engine ready, low-poly 3d ship/station/planet/weapon models, as well as 2D renders if need be.

== Design details ==

The following paragraphs describe the basic model of the game, IMHO achievable during the program timeframe. All code will however be written with expansions in mind.

=== Galaxy behaviour ===

The world will be fixed sized, generated and stored at start of the game. Following the KISS principle, initially there will be just one plane per system. Each world will have some suitable random description and parameters. Also each world will have one major (Empire, Alliance, Federation), and several minor affiliations.

The world will be updated each turn. Initial design idea is to have a fine turn granularity. Changes include random events ( not affected by player actions ), and changes due to player involvement. Several standard galaxy updates will be done per turn:

* update of the economy ( depending on what is sold/bought where )
* update of the political model 
* update of planetary data ( due to changes in politics )
* update of reputation data
* update of mission statuses
* creation of new world events/new missions

=== Turn lenght ===

Initial design idea is to make turns short, and to make actions last several turns. This would make for a casual game that you run in the background while doing other things, and only taking action once your long tasks are completed. Browser games of the like of OGame have prooven this model to be quite successful, and I also believe that this is a great model for an eventual future mobile or web-client. I also believe that such a model ( with the single-ship-focus added in ) would appeal to a wider audience than the current hardcode 4X players model.

=== Turn types ===

Depending on the players situation, turns allow for different actions. The basic situation in which the player can find himself are:

;Hyperspace
:the player can only gather information from nearby planets, observe the movement of nearby players and send messages. Maybe in a future version he will be able to control his holdings and henchmen, but the basic version doesn't implement that. The player is fully safe during hyperspace travel, but absolutely can't do any world actions (even stopping or reversing his journey)

;Orbit
:each arrival at a planet has a turn (maybe more?) during the player is already out of hyperspace, but not yet docked ( in the future, maybe there will be more docking places in a given system, then there will be one docking turn between them ). Similarily, each time the player picks a new system destination, the first turn is docking. This is the only turn type at which end combat can occur. Docking consumes fuel (if fuel is zero, the only action available is planet docking). 

;Docked
:player is docked at a planet. This allows the most actions, also the player is safe from attack

=== Turn actions ===

Available actions depend on what turn type the player is.

* '''Common actions''' ( available in all modes, free )
** check planet information if planet is in a given distance
** send message to other player
** read messages and newsfeeds (messages)

* '''Orbit actions''' ( available only in orbit mode, one per turn )
** attack a ship that is docking in the same system
** dock with planet
** choose a hyperjump destination
** use a jumpgate ( same as hyperjump but a lot faster, available only on selected routes )
** mining ( possible only in some remote systems, with proper equipment, long action )
** wait ( default action )

* '''Planet actions''' ( available only in docked mode, single per turn? )
** accept a mission
** perform a trade transaction ( buy or sell )
** preform a ship upgrade
** preform a ship repair
** launch ( possibly with a set destination )
** wait ( default action )

=== Combat ===

Combat can occur only at the end of a players "docking" turn. Combat can be initiated by another player that is also docking, or by the server itself ( pirates, police if criminal, military, or other ). Combat has a random factor, generally however the ship with the stronger weapons does more damage, the ship with the better armor receives less damage ( strength may be affected by pilot skills if implemented ). Internally four factors determine the outcome of a battle:

* '''Hull status''' : a precentage value, representing the shape the ship is in
* '''Armor''' : the rate in which the ship looses hull status
* '''Shields''' : the amount of damage that the ship absorbes in a turn without loosing hull status
* '''Weaponary''' : the rate in which the ship deals damage

After combat the result is judged. The ship that lost more hull status is the looser, as long as the difference in the loss is relatively significant, hence a draw is possible. In case of draw, nothing happens, except hull loss. In case of a conclusion:

* if the looser is reduced to below 50% he risks having upgrades on the ship damaged
* if the looser is reduced to below 25% he risks having upgrades on the ship destroyed
* in normal mode game if the looser is reduced to 0% he makes an immidate planet dock, loosing all his cargo to the winner
* in case of a permakill mode game, if a looser is reduced to 0% he looses his ship, and unless he has money for a new one, he probably ends the game
* in case of a permadeath mode game, if a looser is reduced to 0% he ends game

=== Missions ===

Accepted missions can be checked any time. There's a limit to the amount of missions that one can have running at a given time, based on player rating and rating within the organization that assigns the mission. Missions have a time limit. Once a mission is assigned, it cannot be unassigned -- once the time limit ends the mission is considered failed (in some cases that has negative reputation effect, or even worse consequences). 

Mission targets, descriptions and conditions are randomly generated. Misson templates are coded in a scripting language. Missions may be assigned by planets (individual assignee) or by organizations. Example missions from the technical point of view:

* deliver [PACKAGE] from [PLANET] to [PLANET]
* deliver X [PERSON(S)] from [PLANET] to [PLANET]
* deliver X tons of [CARGO] to [PLANET]
* destroy [ENEMY(IES)] at [PLANET] on day [DAY]
* clear (destroy all enemies) systems [PLANET], [PLANET] and...
* bomb (survive a turn and return) system [PLANET]
* scout (survive X turns and return) system [PLANET]
* etc.

Where:

;PLANET
:Destination. To achieve the goal one needs to dock at the planet. The most common source place is the place where the mission is given.

;PACKAGE
:A mission specific object, that doesn't take space.

;PERSON
:Mission specific object, takes crew space (most players start with single-person ships without crew compartments).

;AMOUNT
:People take 1 crew space each, cargo takes one cargo space each.

;ENEMY
:A mission target, a "combat event" controlled by the server.

;DAY
:Each game turn is a single day in the game's calendar


The technical point of view doesn't reveal all info : a planet to planet person transfer may be a simple passanger, or may be a jailbreak (with the latter being filled with combat, and rating loss in some organizations/systems). Several such modifications are possible.

A mission has different definitions on when it's undertaken. In case of "from here" missons, this is immidate. In other situations there's a given place where it's undertaken (or even undertaking is equal to completion) -- in that case it may happen that multiple players race for the same mission. In case of a tie, the one with the higher rating for the given organization (or global rating in case of individual missions) gets priority.

Missions have a positive impact on income and may have a positive impact on reputation ( possibly within a organization ), but may also have negative impacts (especially illegal missions, and missions targeted against given organizations).

A possibility to define hardcoded missions will also be present.

=== Goal ===

EliteSec in it's basic form would be definitively open-ended, as the original game was. With the simple model presented above that would make games that last longer probably boring after a time. However, there are many "late-game" ideas that could be added in the future.

However, the game will allow setting some "end-condition" at runtime, be it achieveing "Elite" ranking, gaining a set amount of money, killing all other players in permadeath mode ( mode where a destroyed player ends game ), or a simple time limit.

=== Single player ===

Due to the ship-based gameplay, the fact that the universe lives without the need of players, and that the game has a strong interaction between the player and the universe itself, this ruleset would be an ideal single-player game.

=== Gameplay example ===

Days are in game universe days -- one day is one turn, one turn will normally be five minutes.

;DAY 1 - LAVE (PLANET)
:I log into the game at game start, take a look around the galaxy. No problems, in the distance of 4 light years (6 planets) there are no players. Life is good, let's take the easier path and find a local mission. In the local cantina I find something suitable for me, delivering a package to Riedquat for 200 credits in a timeframe of 12 days. Checking the starmap this is exactly 1 jump from here, consuming one ton of fuel. I check the inventory -- got 2 tons of fuel, so one to get me to orbit, and another one for the jump. I issue an order to take the misson, and issue a second order to launch.

;DAY 2 - LAVE (ORBIT)
:In orbit, no ships present, so I feel safe that there'll be no attack when I get into hyperspace. I give the order to jump to Riedquat, end turn, and go to make myself some coffee.

;DAY 3-5 HYPERSPACE 
:Day 3 started without a combat report so the jump went well. I look around the galaxy, write a few welcoming messages, check my email. On day 4 I receive a local EliteSec news bulletin. One thing that's interesting is an epidemy outbreak on Zaonce. Hell, this might be my beginners luck! I note it down and resume websurfing.

;DAY 6 RIEDQUAT (ORBIT)
:A little nervous with the turn update, luckily a quick look at the system at arrival revealed no pirates, nor previously cloaked players. I give the order to dock (actually I have no fuel left, so that's the only option).

;DAY 7 RIEDQUAT (PLANET)
:I get the always lovely message "mission completed", and a nice round 200cr. to my account. Remembering the bulletin, I take a look at the map. Zaonce is 2 jumps away, through Leesti or Orerve system. A quick look at the planet descriptions shows that Orerve has a low goverment control rating. I'd rather avoid pirates, so I decide to take the safer route through Leesti. Those are two jumps, so I need 3 tons of fuel. That leaves 4 tons of cargo space in my ship. It turns out it isn't much of an issue, cause I've got 300cr. and a ton of medicine costs 89cr. on Riedquat. Hence I place an order to buy 3 tons of fuel, 3 tons of medicine, and do a launch. Damn, just 18cr left, I hope I won't get into problems

;DAY 8 RIEDQUAT (ORBIT)
:All still safe here, orbit info only shows a transport ship docking (maybe one day I'll pirate it ;>). I choose the target Leesti for a jump.

;DAY 9-10 HYPERSPACE
:A safe journey, another local news builetin but nothing interests me.

;DAY 11 LEESTI (ORBIT)
:Safe arrival, only some Alliance military ships on orbit. I don't have any special standing with the alliance, so I'm quite safe. Nothing to do on planet, and still a ton of fuel, I plot the jump to Zaonce (I wish I had the money for that autopilot, it'd plot it as my default action itself...).

;DAY 12-14 HYPERSPACE
:Replying to work related e-mail, looking at the client from time to time. 

;DAY 15 ZAONCE (ORBIT)
:Pirates! A look at the orbit info indicates those annoying sever-hellspawn. Sure, this'd be too easy if they weren't. I check the info on them -- two Eagle Mk II class ships, I think I can manage... Order to planet land.

;DAY 16 ZAONCE (PLANET)
:Combat report! I managed to destroy one of them, and damage the other while taking 22% hull damage. My first kill! Rating goes from Harmless to Mostly Harmless :). Ah, I also get a message from the local police -- 40cr. bounty is little but always cool. I check the planet info (should have done that on orbit probably) -- yes, the state of epidemy is still valid. I look excited on the market... Bingo! The selling price of medicine is 220cr per ton! I wish I had more cargo space, maybe later I'll by myself a larger ship... I order the selling of medicine and end turn.

;DAY 17 ZAONCE (PLANET)
:660 credits aquired for the medicine, life is great. A quick look at the market shows that the new price is 200, seems as I managed to fill some of the demand. A look at the orbit reveals a player! Seems he was also racing to sell medicine... Hence he'll probably be landing, I should take off then, so I don't get at the same time with him in orbit (he might attack me...). A quick look at the mission board reveals an Alliance Officer. Ah hell, I might enroll -- looks fun, the mission to deliver a suitcase to Reorte for 420cr should be easy... probably...

== Implementation details ==

The ruleset will be developed in object oriented C++, making heavy use of boost (if allowed) and STL libraries. The model will be broken up into three (as much independent as possible) major components:

* '''Core''': the action handling/server implementation
* '''World''': the world representation, with a completely player/game independent model, and associated update algorithms
* '''Algorithms''': a library of fairly generic random generation algorithms (names, planet data, starmap, descriptions)

Data will be also divided into three separate components, each assigned to a specific component:

* '''Game data''': current state of the game and world, handled by a database
* '''Script data''': scripts controlling the dynamic aspects of the world (missions, etc.)
* '''Generation data''': data used only at server initialization, food for the Algorithms component

More implementation details will appear when I familiarize myself with the available TP libraries.
<!--
== Brief Bio/Resume ==
I'm a Computer Science PhD student (1st year) at the Wroclaw University, Poland. My interests lie in Game Programming and Design, with a special hunch for Real-time Procedural Content. 

I've successfully taken part in last year's GSoC creating a Procedural City Generator for BZFlag ( project homepage, out of date, http://bzflag.chaosforge.org/ ).

I know several computer languages, tough I favor FreePascal (Delphi) and C++ that I currently write my own projects in. These include the beginnings of a 3D game engine ( http://sourceforge.net/projects/libvalkyrie ) in C++, and an unannounced space combat/trading game (codenamed StarDreamer), which heavily is inspired by Elite and Frontier. 

I am a big fan of roguelike games, due to their randomness, and the focus on gameplay over presentation. I have managed to write several roguelikes up to date, the most famous one of them being DoomRL ( http://doom.chaosforge.org ) that did even get mentions in contemporary gaming magazines. I also know how to do game designs and organize my time and work, having taken part in three 7DRL Competitions (aimed at writing a playable and fun roguelike game in 7 days), and managed to finish them successfully each time.

Rules design is something that I needed to learn well, because good, balanced and interesting rules were the only way to get attention to a roguelike game. I always given high value to user submission evaluation in my projects, what can be seen on my games' forum ( http://forum.chaosforge.org/ ).

* Homepage : http://chaosforge.org/ 
* IRC Nick : Epyon
-->
== Project Schedule ==

I plan on working on the project fulltime during summer, apart from some time spending on research for my PhD thesis. I plan to maintain a blog with progress update, and once workable maybe a semi-public test server at my place.

The design document will be finished before the official coding time starts, and will be presented to the community in the form of wiki pages that anyone can comment on. Design will be then finalized and frozen before the deadline of May 23. The design will also include a basic design of the technical aspects of the ruleset, as well as a report on what will need to be changed on the client, server and protocol side if need be. 

The coding time will be divided into two parts -- first one will implement the midpoint project. At this point I start to run games and gather as much feedback/bug reports as possible to be included/fixed in the second part of the project. The second part will have new versions of the ruleset uploaded for testing at least weekly, and I'll be constantly monitoring feedback during this time (if the amount of people interested will be large I might need someone to help me organize all the stuff).

== Detailed timeline ==

A detailed timeline is hard to write without a good plan of implementation and an extended knowledge of the TP framework, hence this is just a guideline that is subject to change before May 23.

=== '''Preplanning''' (April 20 - May 23) ===

* detailed design document
* setting up the dev environment
* studying the C++ server and protocol library
* cleanup of the C++ server if needed
* picking a primary client
* basic artwork depending on the client

=== '''Milestone 1''' - June 14 -  ''(Mostly Harmless)'' ===
'''Goal:''' operability achieved

'''Length:''' 3 weeks

'''Deliverable:''' operational framework

* Week 1 : basic framework -- application framework, basic class structure, and the ability to handle connections, possibly Lua support, basic updates to the C++ server if needed.
* Week 2 : basic world generation (names, descriptions, systems, trade info), sending them to the client (and if necessary, changes to one of the clients)
* Week 3 : continuation of week two, client changes if needed, connection and data download

=== '''Milestone 2''' - July 5 - ''(Average)'' ===
'''Goal:''' basic playability

'''Length:''' 3 weeks

'''Deliverable:''' private-access alpha version

* Week 4 : basic orders (trade, movement, ship upgrades), economy and trade system, basic combat code
* Week 5 : events (combat events, planetary events, information events), event generation, message generation
* Week 6 : missions (random generation, descriptions, rewards, completion and progress checking)

=== '''Milestone 3''' - July 26 - ''(Deadly)'' ===
'''Goal:''' feature implementations

'''Length:''' 3 weeks

'''Deliverable:''' public beta version

* Week 7 : basic non-player organizations (generation, AI, ownage of systems, system conquering)
* Week 8 : reputation system, organization status and missions, additional roles
* Week 9 : setup for a public beta version, polishing updates, additional media

=== '''Milestone 4''' - August 10 - ''(Elite)'' ===
'''Goal:''' bugfixing, stability and RFE's

'''Length:''' 2 weeks

'''Deliverable:''' stable version

* Week 10 : bugfixing, feature requests, balance, additional media, etc.
* Week 11 : buffer week for eventual unexpected delays

=== Bonuses (some of them if time allows) ===

* information propagation
* NPC helpers
* buying fixed world elements
* fixed world elements management
* additional career paths
* robust organization AI
* AI players/bounty hunting
* lategame improvements

=== Aftermath (August 10+) ===

This is one of the games that if executed well always has room for improvement. If it will work, and start gaining players, I'm sure to work on it more (including maybe even a dedicated graphical client).


== Comments ==

Looks very nice in general. Some things to add are more info about yourself (which timezone, education, motivation, past experiences, hours a day you would use to work on this, possible abscence/holidays...). Other thing I would like to see if you could add TP protocol structures you would use for each part of the ruleset and how you would use them. if protocol doesn't have the structure yet also mention this so you can quickly see what would be needed there. But as you say you will still have to take a deeper look at the server*protocol to see what's needed. Also I have a feeling that the ruleset itself would be more enough work and you will couldn't afford to also work on improving the client and doing so much work on the graphic stuff. The ruleset would have to have the highest priority and all other things are probably just bonus if there is time left. - [[User:JLP|JLP]]

:About bio/education/personal stuff, I'd rather keep that private for the closed application :). Doing graphic stuff is a hobby of mine, as for the client, it'd be cool if someone would help me in that regard. 

:[[User:Epyon|Epyon]]

----

How long are you suggesting turns should run for? One every 10 minutes, one every hour, or? It could make a big difference to how it plays out. 

Do you plan on enabling single player support? This sounds like it could be a pretty good way to get a feel for the game before playing online with other people (even if there are no AI trying to kill you). It also sounds like a strong candidate for the "scenario idea". 

I see a couple of client interface problems:
* How do you plan to do the market stuff, none of the clients support something like that nor, does the protocol. 
* How do you expect the attack on orbit thing to work? Does a player have to set an attack order or?
* How will a person view available missions and currently accepted missions?
* The auto-pilot problem you describe could easy be gotten around with a custom client.

I think these steps should be done before the GSoC application period closes as they will effect how the proposal.
* setting up the dev environment
* studying the C++ server and protocol library
* picking a primary client 

Adding a new ruleset, extending the protocol and updating the clients is just too much and too invasive.
- [[User:mithro|mithro]]

:Suggested turn length is around 5 minutes. Single player support would be something that could give the game a second life ( I wrote about it in the proposal ). However in that case, a end-turn-on-demand option (or even better, auto-end-turn) should be possible. Scenarios would be really cool with pre-prepared mission plots ( like in Frontier: First Encounters ). 

:Market and mission interfaces are a problem, a client would need to be updated for that, but I doubt that these would need serious changes in the protocol. Even if they did however, TP would really benefit from those changes. 

:As for picking a primary client, I fully agree, but I'd really count on your suggestions in this regard. I'm much more content with working with C++ code than Python, but if someone would be able to assist me I can choose a Python one.

:[[User:Epyon|Epyon]]

----

[[User:nash|Nash's]] Comments:

Okay... seems to be a _Very_ slow game?  Does running multiple games at one make sense or something?  

:The ruleset is more designed to play like a browser game -- eg. it's not taking full focus, but as something to be played in the background (what I really like, and I think there's a big audience for that). If several extensions were to be added however, it'd get more and more time-consuming. Still, the 5 minute turn length still allows for some dynamics.
:[[User:Epyon|Epyon]]

Combat worries me... it's very random and out of my control as a player.  Elite was famous for it's full on combat which was a game of skill... good players could survive with a pulse laser... Bad players even an iron cobra wouldn't help.  How do you propose to capture some of that?  Also tricks like avoiding the planet-to-bouy route won't help?
:Some decisions had to be made to fit a playable version within the time frame. Extended combat would be something nice to add in the future, however the quick and dirty system here isn't at all that bad. The damage calculations would be designed that way that if there's not an absurd difference between ships ( a fully loaded Imperial Courier vs and Eagle ) combat will take more than a couple of turns -- this is where tactics and skills could come in. The ability to always escape would also be removed, based on different factors -- tactics, skills and equipment. 
:[[User:Epyon|Epyon]]

Regarding mithro's comments: I'm not too concerned about _small_ extensions to protocol and client additions, but you need to say what needs to be added now.  This is an area that also requires intergration with others.
:That could definitively be done once I find some time.
:[[User:Epyon|Epyon]]

Other random questions:
Is there a better economic model then the original elite?  
:The model I planned is far superior. The basic flaw of elite economy was that it was completely inaffected by player actions -- once you found a good trade route ( Sol vs Barnard's Star with Robotics from FFE comes to mind ) you could make money ad infinitum. EliteSecs model is self-updating, based on simple laws of economy -- the more you sell something at a given place, the more it's price falls.
:[[User:Epyon|Epyon]]


How are planets and descriptions generated?  
:Procedurally, based on sets of words. However, the process will be less chaotic than one can imagine. First we determinate the planet type, temperature, humidity, then all further randomization rolls are dependent on previous factors.
:[[User:Epyon|Epyon]]

What can we expect to see done before we say 'yah' or 'nah' (or rank anyway) for SoC?
:Unfortunately this is a gamble for you, because I need to say "not much". I'm currently still working full-time at a corporation at the moment *and* running a lecture on Game Programming at the university. My amount of free time will be able to rise only once I'm sure that I will have my survival granted for the summer, and will be able to quit my regular job.
:[[User:Epyon|Epyon]]

Generally my biggest concern would be: Why is this fun?  It's fairly slow game now.  The main excitment (combat) has gone out the window and replaced with a random 'you die now' mechanic.
:Mainly because of the life of the universe. Things happen around you, even if there are no players. Also, due to the slow paced gameplay, this design has the same merits as space browser games. A player wants to see his avatar grow in time. Also, form my experience in playing Elite, and from the experience of people I know, I noted, that it wasn't combat that driven them. It was the ability to explore and live in an open ended galaxy. This is the feeling I want to achieve, also adding the element of the galaxy being alive ( which I really lacked in the Elite series ). Please note however, that in the basic settings there is no 'you die now' anyway -- your ship is just heavily damaged, looses cargo and makes planetfall. 
:[[User:Epyon|Epyon]]


---- 
[[User:Nash|nash]] on Combat and Fun round two:
Epyon said: 
:Please note however, that in the basic settings there is no 'you die now' anyway -- your ship is just heavily damaged, looses cargo and makes planetfall. 

Well lets see... 
* Start game with 100 credits
* Spend 87 credits to buy first load of cargo
* Make first jump... wait 4 turns for ship to arrive at [http://wiki.alioth.net/index.php/Lave Lave]
* Get attacked by pirates
* Login into game... discover 800credits of damage, no cargo, no fuel and 13 credits in the bank.
So at this point my game is screwed.  I can't even afford to buy enough fuel to leave the system.

This is not just a problem for the first few jumps.  Cash is tight in Elite.  It's not for quite some time that you have cash left over after buying cargo before a jump.

So no, based on your description you are essentially dead.  There is no fundamental game difference between ''dead'' and not being able to do ''anything''.  At this point 99% of players are going to justifiably either restart the game or say "sod this", never to be seen by this ruleset of Thousand Parsec in general.  So from this point 'dead' and 'unplayable' I'm going to treat as the same.

This needs to be fixed. 

In the original Elite and Oolite when you start you occasionally get the crap blown out of you, but you weren't waiting a week for this to happen, and you could reload straight away and continue from the last station.  Here we have a game where you wait 5 turns to find out your are dead.  

:Fuel is cheap. You don't have to repair your ship to fly. Also, strong pirates only attack worthy targets, so you can only be ambushed by a gang of thugs that you probably can handle. That is if you didn't take a ultra-risk mission ;). In this regard EliteSec would be a lot more forgiving than elite.
:[[User:Epyon|Epyon]]

And stopping the inevetiable Rogue comparison, it's not the same.  With the exception of a few [http://rephial.org/wiki/AngbandCode#s2_33 Silly] monsters death/getting royally screwed is really your own fault (or at least some connection too) or could have been avoided with the right preperation.

Now you compare this to online browser games where you play a little then come back later to continue.
The immediate comparisons I draw are to 'Legend of the Green Dragon', 'Trukz' or 'Nationstates (1 or 2)'.  In all of these games it takes special effort to screw oneself over, the 
[http://groups.google.com/group/rec.games.roguelike.nethack/browse_thread/thread/f439f644a32e99e6?pli=1 RNG]
makes the game interesting, but rarely unplayable. 
(For what it's worth, I enjoy this style of game, and think it makes sense, but it's not quite what you propose).

:I'm trying to take this into account. Also some kind of "newbie protection" would be in order (also inspired by browser games)
:[[User:Epyon|Epyon]]

So I come back to: ''How do you make the game fun, if one unlucky RNG roll will cause you to be dead and have to start again?''

:By not making the RNG as random as in roguelike games. Random problem risk is equal to the risk undertaken by the player.
:[[User:Epyon|Epyon]]

----
[[User:Nash|nash]] on turns:

The browser game is a good comparison: May I suggest that 'the jump' end your turn, and your next turn starts at your destination.  So a 24 hour turn cycle would mean two trades or jumps a day, set my orders, and tommorrow I see the results.  

An amazingly dishearting session would be:
''In transit Lave to Diso: You can do:''
* Nothing
* Nada
* Squat
* Logout

:The need to have the two transit phases needs to be thought through, I think one of them may be removed, or at least have an autopilot built in that makes the jump once in orbit if the player does no action.
:[[User:Epyon|Epyon]]
