# Still under construction

== Introduction==

==== Abstract====
In this wiki page, I propose a scenario and save-load support for Thousand Parsec clients.

==== Background====
It is common that a single player game with AI clients or a multiple players game can last for hours. So sometimes the player may not be able to finish a game and want to save it somehow and load and continue to play the game later.

In addition, some player may find that it is boring and monotonic to always player the single game with AI clients in the same setup. They want something more interesting and challenging. For example, they start the game in a very disadvantageous position and then try to reverse the tide and defeat others in the end.

So it would be very nice to have the scenario support. 


== Task Specification==

==== Primary goals====
By adding this scenario support, we should enable players to:

* Save a game into an external file. It would support both single-player game and multi-player game.

* Load a saved game and continue to play it. If the game is previously played with an AI client, it should enable the player to continue to play this saved game with the same AI client, i.e. the AI client has the same parameter and load the current states of the game.

* Load a pre-defined scenario. In a scenario, the player would have some pre-defined amount of resources and fleets. The player needs to accomplish the defined goal in order to win.

* Play campaigns, which is a series of related scenarios.


Following is some other requirement as mentioned in the Ideas for Programmers wiki page [http://www.thousandparsec.net/wiki/Ideas_for_Programmers#Scenarios].

* This feature should be designed in such a way that other clients and client libraries can use it in the future.

* It should first make sure that the player has the necessary server, ruleset, and AI client(s) installed to play the scenario, and providing the easiest way possible to install them (download links, instructions, etc.) if they don't. 

==== Bonus goals====

* Build Scenario Designer, which allows the user to design their own scenario in a intuitive way.

==== Pre-assumptions====
In addition, their are some assuptions for above task.

* The server and AI clients provide some way to store their state.


== Implementation==

# Design a protocal for the server and client to support this scenario and save-load.

# Design a format for efficient store of the current server state.

# Since the assumptions mentioned in the task specification are not valid, we need to first modify the AI client and the server to implement the protocal.

#
