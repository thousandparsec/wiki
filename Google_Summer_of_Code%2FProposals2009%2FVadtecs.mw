== ABSTRACT ==

It is my intention to implement unit testing for the Thousand Parsec C++ client protocol module. The unit testing will validate the protocol module against the published Thousand Parsec protocol(s). Unit testing will be achieved by using available testing tools such as CppUnit and custom code to test for adherence to the protocol. The unit testing will provide benchmarking of protocol library code as much as possible.

== CONTACT INFO & AVAILABILITY ==

'''Contact Info'''

Nicholas Davey
IRC Nick: Vadtec
E-mail: vadtec@vadtec.net
AIM: vadtec MSN: vadtec@vadtec.net
Note: You can reach me nearly any time on irc.vadtec.net (6667) or AIM/MSN.

'''Availability'''

I am usually available from 1600 CDT (GMT -6) to around 2300 (sometimes as late as 0100).

I plan to spend at minimum 4 hours per day and 4-6 hours per weekend working on implementing unit testing. As time (and classwork) permits, I will put in extra time on the project. 

== PROJECT PROPOSAL ==

To implement unit testing for the Thousand Parsec C++ client protocol module to insure proper compliance with all requirements of the established Thousand Parsec protocol.

'''Testing for correctness'''
:*The unit testing will test all code pathways to insure that all possible outcomes are within the protocol requirements and specifications.

'''Benchmarking'''
:*Where possible, the unit testing will provide benchmarking of the tested code pathways to help identify potential bottlenecks in the code
:*In addition, the unit testing will implement testing of network code and provide benchmarking wherever possible.
:*Benchmarking will be achieved initially using timing of calls to code. If possible within the allowed time frame, a method similar to cachegrind from the Valgrind suit will be employeed to provide more accurate method of benchmarking of code pathways.

=== Expected Project Milestones ===

::#General
::#*Maintain documentation of unit testing
::#**Using the wiki to document each unit test as it is completed, or in a situation where unit testing isn't feasible or possible documenting as to why
::#*Subversion/Git repository tracking
::#**Use Subversion or Git to track all code changes
::#**Insure that any given revision will compile and run as expected
::#*Provide feedback to the core development team and mentors regarding any possible improvements or changes that could be made to the protocol code
::#'''April 20 - May 22'''
::#*Research unit testing methodologies and techniques
::#*Create simple examples of unit testing
::#*Become familiar with the Thousand Parsec protocol and gain a fundamental understanding of its workings
::#'''May 23 - July 5'''
::#*Begin extending the existing unit testing for the current C++ protocol module.
::#**Benchmark any possible code pathways
::#*Document each unit test as it is completed
::#'''July 6'''
::#*The unit testing will have implemented at least 75% of all non-network related unit testing and any possible benchmarking of the tested code pathways
::#'''July 6 - August 9'''
::#*Continue implementing non-network related unit testing and any possible benchmarking of the tested code pathways
::#*Continue documenting each unit test as it is completed
::#*Once the non-network related unit testing is completed, begin implementing network related unit testing and any possible benchmarking of the tested code pathways
::#'''August 10'''
::#*The testing will have implemented 100% of all non-network related unit testing and any possible benchmarking of the tested code pathways
::#*The testing will have implemented as much network related unit testing as possible with any possible benchmarking of the tested code pathways
::#'''August 10 - August 16'''
::#*All implemented unit testing will be finalized and documented
::#*Any unit testing which is incomplete will be excluded from normal unit testing to prevent false reporting or errors
::#*Code clean up
::#'''August 17'''
::#*Final check in of all unit testing code and documentation

In the event the entire Thousand Parsec protocol module has been unit tested and conforms to the requirements of the protocol, I will begin an in-depth look at the code to find any possible improvements that may have been missed or passed over during unit testing.

'''Disaster Plan'''

Life sometimes throws a rock in the road ahead of us. While I try to avoid them not everything can be avoided. In the event a situation arises that I must deal with, I will do the best I can to handle it and continue working on the project. In the event I am forced to leave the project unfinished, I am confident another coder will be able to finish it in my place due to a constant log being kept of what has and has not been finished, as well as a log of what my intentions are for the project.

== IMPORTANCE OF UNIT TESTING ==

=== Benefits to the community ===
:#Insure that all clients implementing the Thousand Parsec protocol will function as expected
:#Enforce conformance to the Thousand Parsec protocol in all clients
:#Improve the quality of released clients

By unit testing the client protocol modules for conformance to the established Thousand Parsec protocol, the game developers can focus more on implementing features of the game. They will be able to rely on the fact that the client protocol library works as they expect it to. This will increase the rate at which the game developers can release new features for the framework. It will also help decrease the potential for serious bugs to be found and exploited if possible.

=== Benefits to Thousand Parsec ===
:#Insure that all clients adhere to the Thousand Parsec protocol
:#Better implementation of the Thousand Parsec protocol by clients

By unit testing the client protocol module, the server developers can rely on the fact that the client is going to behave in a predefined manner. This will eliminate the need for the server developers to debug client related errors that are causing them issues.

== PERSONAL EXPERIENCE ==

I am currently enrolled in an undergraduate school studying for my A.A.S. C.I.S. I am focused on the programming aspects of the source with interest in main frame development. I plan to transfer to another local college after obtaining my A.A.S. and continue my degree plan by refocusing into a M.A. C.S. with as much emphasis as possible in main frame development.

I am a user of primarily GNU/Linux since 2000 during which time I have come to love the Red Hat flavors of GNU/Linux. I have been an open source advocate almost the entire time, even going so far as to give up niceties of Windows in favor of open source software when it was appropriate. Any time I am presented with a problem, I look to open source first and (begrudgingly) turn to proprietary solutions only when I must.

Outside of school I have limited professional experience. I am a self taught C coder and have been using C as my language of choice since around 2003. I have dabbled with many languages, some of which include Tcl, Python, Perl and BASIC. I use PHP as my language of choice for web development, though I used Perl before PHP. I enjoy learning new languages, and even though I may dislike some languages, I will try to find the good points for any language I try.

== PERSONAL HISTORY ==

I am a single father of two wonderful children. My son is now eight and my daughter is now six. They are what drive me in life. Everything I do is to support them and give them the life they deserve. To say they are my life is an understatement.

While I am a father first, I do enjoy many things. Computers would be my second love in life (after my kids of course). I like to bend computers to my will as much as possible. When I am not slave driving a computer, I am watching anime or playing a variety of video and computer games. I am an avid RPGer, both on game consoles and in the older style of play from D&D. I play D&D any chance I get and am not afraid to play a whacky character. (My friends will say my characters represent my true self, but I disagree.)

I love to learn about computers in general, so the more I know the happier it makes me. I can be quite stubborn and have a tendency to not give up on problems that I know can be solved. I am willing to try most things at least once and open to different points of view.

When I'm not having fun with my kids or playing computer gaming or bending computers to my will, I enjoy going out with my friends and making trips to see my best friend. I try not to sweat the small stuff and take life one day at a time. If life should rear its ugly head and get in my way, I try my best to push it aside and live my life as I see fit.

== CLOSING ==

I am eager to work on this project and help improve Thousand Parsec as much as possible. The 4x genre of gaming is one of my favorites. Anything I can do to bring a new spin on the genre is a good thing to me. I know along the way I will learn a great deal and be contributing back to an open source project that I want to see become better. I also know that along the way I will get to know a great group of people who are passionate about the work they do in open source.

I appreciate your considering my application for working with Thousand Parsec during Google Summer of Code 2009 and hope to be working with you soon on this project.

Sincerely,

--[[User:Vadtec|Vadtec]] 01:51, 26 March 2009 (EDT)
